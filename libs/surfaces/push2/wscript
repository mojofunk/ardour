#!/usr/bin/env python
from waflib.extras import autowaf as autowaf
import os

# Mandatory variables
top = '.'
out = 'build'

push2_sources = [
'push2.cc',
'buttons.cc',
'canvas.cc',
'interface.cc',
'midi_byte_array.cc',
'leds.cc',
'level_meter.cc',
'gui.cc',
'knob.cc',
'layout.cc',
'menu.cc',
'mix.cc',
'scale.cc',
'splash.cc',
'track_mix.cc',
'utils.cc'
]

push2_amalgamated_sources = [ 'push2_amalgamated.cc' ]

def options(opt):
    autowaf.set_options(opt)
    
def configure(conf):
    conf.load ('compiler_cxx')
    autowaf.configure(conf)
    autowaf.check_pkg(conf, 'pangomm-1.4', uselib_store='PANGOMM', atleast_version='1.4', mandatory=True)
    autowaf.check_pkg(conf, 'cairomm-1.0', uselib_store='CAIROMM', atleast_version='1.8.4', mandatory=True)
    
def build(bld):
    sources = list(push2_sources)
    if bld.env['AMALGAMATE']:
        sources = list(push2_amalgamated_sources)

    obj = bld(features = 'cxx cxxshlib')
    obj.source = sources
    obj.export_includes = ['.']
    obj.defines      = [ 'PACKAGE="ardour_push2"' ]
    obj.defines     += [ 'ARDOURSURFACE_DLL_EXPORTS' ]
    obj.defines     += [ 'VERSIONSTRING="' + bld.env['VERSION'] + '"' ]
    obj.includes     = [ '.', './push2']
    obj.name         = 'ARDOUR_PUSH2'
    obj.target       = 'ardour_push2'
    obj.uselib       = 'USB'
    obj.use          = 'ARDOUR_CP CANVAS TIMECODE'
    obj.install_path = os.path.join(bld.env['LIBDIR'], 'surfaces')

def shutdown():
    autowaf.shutdown()
