#!/usr/bin/env python
from waflib.extras import autowaf as autowaf
from waflib import Options
from waflib import TaskGen
import os

# Version of this package (even if built as a child)
MAJOR = '0'
MINOR = '0'
MICRO = '0'
WAVEVIEW_VERSION = "%s.%s.%s" % (MAJOR, MINOR, MICRO)

# Library version (UNIX style major, minor, micro)
# major increment <=> incompatible changes
# minor increment <=> compatible changes (additions)
# micro increment <=> no interface changes
WAVEVIEW_LIB_VERSION = '0.0.0'

# Variables for 'waf dist'
APPNAME = 'waveview'
VERSION = WAVEVIEW_VERSION
I18N_PACKAGE = 'libwaveview'

# Mandatory variables
top = '.'
out = 'build'

waveview_sources = [
        'debug.cc',
        'wave_view.cc',
        'wave_view_private.cc',
]

def options(opt):
    autowaf.set_options(opt)

def configure(conf):
    conf.load ('compiler_cxx')
    autowaf.configure(conf)

def build(bld):
    # Library
    obj = bld.shlib(features = 'cxx cxxshlib', source=waveview_sources)
    obj.defines      = [ 'LIBWAVEVIEW_DLL_EXPORTS=1' ]

    obj.export_includes = ['.']
    obj.includes     = obj.export_includes
    obj.use          = [ 'CANVAS', 'ARDOUR' ]
    obj.name         = 'WAVEVIEW'
    obj.target       = 'waveview'
    obj.vnum         = WAVEVIEW_LIB_VERSION
    obj.install_path = bld.env['LIBDIR']
    obj.defines      += [ 'PACKAGE="' + I18N_PACKAGE + '"' ]

def shutdown():
    autowaf.shutdown()
